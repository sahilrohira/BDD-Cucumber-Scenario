package stepdefs.POGManagement;

import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import db.SM_GENERAL_Table;
import pages.apex.ApexTable;
import pages.apex.ApexTextField;
import pages.Master.MasterStore;
import pages.apex.ApexButton;
import pages.apex.ApexDropDown;
import pages.apex.ApexMessage;
import pages.apex.ApexPageHeader;
import stepdefs.common.Hook;
import stepdefs.common.SuperStepdefs;
import utils.AppData;

public class POGM_BrandGroupPageSteps extends SuperStepdefs {

	private String pageName = "Brand Group";
	private String tableLabel = "pog_brand_group";
	private ApexButton apextButton;
	private ApexTable apexTable;
	private ApexTextField apexTextField;
	private SM_GENERAL_Table sm_gen_table;
	private ApexMessage apexMessage;
	private MasterStore mstore;
	private ApexPageHeader apexPageHeader;
	private ApexDropDown apexDropDown;

	public POGM_BrandGroupPageSteps(Hook hook) {
		super(hook);
		apextButton = new ApexButton(driver, testCaseId);
		apexTable = new ApexTable(driver, testCaseId);
		apexTextField = new ApexTextField(driver, testCaseId);
		sm_gen_table=new SM_GENERAL_Table(con, testCaseId);
		apexMessage=new ApexMessage(driver, testCaseId);
		mstore=new MasterStore(driver, testCaseId);
		apexPageHeader=new ApexPageHeader(driver, testCaseId);
		apexDropDown=new ApexDropDown(driver, testCaseId);
	}

	@Then("^From Brand Group Page, Click On \"(.*)\" Button$")
	public void clickOnButton(String buttonName) throws Exception {
		apextButton.clickOnButton(pageName, buttonName);
		logger.pass("From " + pageName + ", Click On " + bold(buttonName) + " Button");
	}
	
	@When("^From Brand Group Page, Validate Record Count from Database$")
	public void validateRecordCount() throws Exception {
		int expectedRowCount= sm_gen_table.getBrandGroupCount();
		Thread.sleep(2000);
		if (expectedRowCount!=0) {
		mstore.validatePaginationCount("Total Records", "//div[contains(@id,'"+tableLabel+"')]//span[@class='a-GV-pageRange']", expectedRowCount+"");}
		else {apexTable.validateTableIsEmpty(pageName, tableLabel);}
		logger.pass("From Floor Plan Page, Row Count " + bold(expectedRowCount) + " matched");
	}
	
	@Then("^From Brand Group Page, Enter Text Field \"(.*)\" Value As \"(.*)\"$")
	public void enterTextFieldValue(String fieldName, String fieldValue) throws Exception {
		if(fieldName.equals("BRAND_GROUP_NAME")) {
			int ranNum = AppData.getRandomNumberBetweenRange(1,99999);
			storeTempData("BRANDGRPNAME", "AutoScript"+ranNum);
			fieldValue= "AutoScript"+ranNum;
		}
		if(getTempData(fieldValue)!=null) fieldValue=getTempData(fieldValue);
		apexTextField.enterText(pageName, fieldName, fieldValue);
		logger.pass("Enter Text Field " + bold(fieldName) + " Value As "+bold(fieldValue));
	}
	
	@Then("^From Brand Group Page, Filter Table content for Column \"([^\"]*)\" With Value \"([^\"]*)\"$")
	public void from_Floor_Plan_Page_Filter_Table_content_for_Column_With_Value(String columnName, String filterValue) throws Throwable {
		Thread.sleep(3000);
		apexTable.filterScrollingTableContent(pageName,"brand_name_search", columnName, filterValue);
		apexPageHeader.clickOnSpanLink(pageName, "Brand Name contains "+getTempData(filterValue));
		apexDropDown.selectDropDownValue(pageName, "brand_name_search_ig_FD_OPERATOR", "equals");
		apextButton.clickOnButtonWithText(pageName, "Save");
		apexTable.clickOnTableCell(pageName,"brand_name_search", 1, "");
    	logger.pass("From Brand Group Page, Filter Table content for Column "+bold(columnName)+" With Value  "+bold(filterValue));
	}
	
	@When("^Extract the Brand Name from Database$")
	public void extractBrandName() throws Exception {
		sm_gen_table.getBrandName();
		logger.pass("Brand Name extracted from Database " + bold(getTempData("BRAND_NAME")));
	}
	
	@When("^Delete the added Brand Name$")
	public void deletfirstBrandName() throws Exception {
		apexTable.clickOnTableCell(pageName,"brand_name_region", 1, "");
		apextButton.clickOnButton(pageName, "Delete Brand Name");
		apexMessage.clickOnButton("Ok");
		logger.pass("Brand Name "+ bold(getTempData("BRAND_NAME"))+" deleted successfully");
	}
	
	@When("^Check the checkbox for Overridename$")
	public void checkCheckboxOverideName() throws Exception {
		apexTextField.clickTextField(pageName, "P116_OVERRIDE_NAME");
		logger.pass("Checked checkbox for Over ride Name");
	}
}
