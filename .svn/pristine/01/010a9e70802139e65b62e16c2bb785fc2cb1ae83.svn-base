package stepdefs.Masters;

import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import db.SM_FIXTURE_Table;
import pages.apex.ApexTable;
import pages.apex.ApexButton;
import stepdefs.common.Hook;
import stepdefs.common.SuperStepdefs;
import utils.AppData;
import utils.AppDateUtil;

public class Masters_FixturePageSteps extends SuperStepdefs {

	private String pageName = "Masters_Fixture";
	private String tableLabel = "fixture_master";
	private ApexButton apextButton;
	private ApexTable apexTable;
	private SM_FIXTURE_Table sm_fixture_table;
	

	public Masters_FixturePageSteps(Hook hook) {
		super(hook);
		apextButton = new ApexButton(driver, testCaseId);
		apexTable = new ApexTable(driver, testCaseId);
		sm_fixture_table=new SM_FIXTURE_Table(con, testCaseId);
	}

	/**
	 * @author Shubhank.garg
	 * 
	 */
	@When("^From Master_Fixture Page, Click On \"(.*)\" Button$")
	public void clickOnButton(String buttonName) throws Exception {
		apextButton.clickOnButton(pageName, buttonName);
		logger.pass("From " + pageName + ", Click On " + bold(buttonName) + " Button");
	}


	@When("^From Master_Fixture Page, Validate Record Count from Database")
	public void validateRecordCount() throws Exception {
		int expectedRowCount= sm_fixture_table.getFixtureCount();
		apexTable.validateTableRowCount(pageName,tableLabel,expectedRowCount);
		logger.pass("From Masters Fixture Page, Row Count " + bold(expectedRowCount) + " matched");
	}

	@Then("^From Master_Fixture Page, For Row \"(.*)\", Select Drop Down Value For Column \"(.*)\" As \"(.*)\"$")
	public void selectDropDownValue(int rowNo, String headerName, String value) throws Exception {
		if(getTempData(value)!=null) {value=getTempData(value);}
		apexTable.selectCellDropDownValue(pageName, tableLabel, rowNo, headerName, value);
		logger.pass("From Master_Fixture Page, For Row "+bold(rowNo)+", Select Drop Down Value For Column "+bold(headerName)+" As "+bold(value));
	}
	
	@Then("^From Master_Fixture Page, For Row \"(.*)\", Enter Text Description For Column \"(.*)\" As \"(.*)\"$")
	public void enterTextDescription(int rowNo, String headerName, String value) throws Exception {
		if(headerName.equals("Fixture ID")) {
			int ranNum = AppData.getRandomNumberBetweenRange(1,99999);
			storeTempData("Fixture_ID", "Auto_Fixture_"+ranNum);
			value= "Auto_Fixture_"+ranNum;
		}
		if(getTempData(value)!=null) {value=getTempData(value);}
		if(value.toLowerCase().contains("vdate")) 
		{String varindays=value.substring(5);
			value=AppDateUtil.newDateInUIFormat(Integer.parseInt(varindays));}
		apexTable.enterCellTextDescription(pageName, tableLabel, rowNo, headerName, value);
		logger.pass("From Master_Fixture Page, For Row "+bold(rowNo)+", Enter Text Description For Column "+bold(headerName)+" As "+bold(value));
	}
	
	@Then("^From Master_Fixture Page, For Row \"(.*)\", Enter Text For Column \"(.*)\" As \"(.*)\"$")
	public void enterText(int rowNo, String headerName, String value) throws Exception {
		if(headerName.equals("Fixture ID")) {
			int ranNum = AppData.getRandomNumberBetweenRange(1,99999);
			storeTempData("Fixture_ID", "Auto_Fixture_"+ranNum);
			value= "Auto_Fixture_"+ranNum;
		}
		if(getTempData(value)!=null) {value=getTempData(value);}
		if(value.toLowerCase().contains("vdate")) 
		{String varindays=value.substring(5);
			value=AppDateUtil.newDateInUIFormat(Integer.parseInt(varindays));}
		apexTable.clearAndTypeCellText(pageName, tableLabel, rowNo, headerName, value);
		logger.pass("From Master_Fixture Page, For Row "+bold(rowNo)+", Enter Text Description For Column "+bold(headerName)+" As "+bold(value));
	}
	@Then("^Fetch the values from database for Fixture type and Family")
	public void getFixtureFamilyandType() throws Exception {
		sm_fixture_table.getFixtureFamilyandType();
		logger.pass("Successfully stored the values for Fixture Type and Family");
	}
	
	@Then("^Validate Meterage, Fixture Status, Volume and Area from Database for Fixture id \"(.*)\"$")
	public void getFixturedataforFixtureID(String Fixture_ID) throws Exception {
		String value=null;
		if(getTempData(Fixture_ID)!=null) 
		{value=getTempData(Fixture_ID);}
		sm_fixture_table.getFixtureMasterdetails(value);
		apexTable.validateScrollingTableCellValue(pageName, "fixture_master", 1, "Inner Volume", "INNER_VOLUME");
		apexTable.validateScrollingTableCellValue(pageName, "fixture_master",1, "Inner Area (mm", "INNER_AREA");
		apexTable.validateScrollingTableCellValue(pageName, "fixture_master", 1, "Fixture Status", "Planned");
		apexTable.validateScrollingTableCellValue(pageName, "fixture_master", 1, "Meterage", "FIXTURE_METERAGE");
		logger.pass("Validated Meterage, Fixture Status, Volume and Area for fixture id "+bold(value));
	}
	
}
